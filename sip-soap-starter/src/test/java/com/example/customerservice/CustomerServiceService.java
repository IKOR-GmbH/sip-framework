package com.example.customerservice;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/** This class was generated by the JAX-WS RI. JAX-WS RI 2.3.2 Generated source version: 2.2 */
@WebServiceClient(
    name = "CustomerServiceService",
    targetNamespace = "http://customerservice.example.com/",
    wsdlLocation = "/soap/CustomerService.wsdl")
public class CustomerServiceService extends Service {

  private static final URL CUSTOMERSERVICESERVICE_WSDL_LOCATION;
  private static final WebServiceException CUSTOMERSERVICESERVICE_EXCEPTION;
  private static final QName CUSTOMERSERVICESERVICE_QNAME =
      new QName("http://customerservice.example.com/", "CustomerServiceService");

  static {
    CUSTOMERSERVICESERVICE_WSDL_LOCATION =
        com.example.customerservice.CustomerServiceService.class.getResource(
            "/soap/CustomerService.wsdl");
    WebServiceException e = null;
    if (CUSTOMERSERVICESERVICE_WSDL_LOCATION == null) {
      e =
          new WebServiceException(
              "Cannot find '/soap/CustomerService.wsdl' wsdl. Place the resource correctly in the classpath.");
    }
    CUSTOMERSERVICESERVICE_EXCEPTION = e;
  }

  public CustomerServiceService() {
    super(__getWsdlLocation(), CUSTOMERSERVICESERVICE_QNAME);
  }

  public CustomerServiceService(WebServiceFeature... features) {
    super(__getWsdlLocation(), CUSTOMERSERVICESERVICE_QNAME, features);
  }

  public CustomerServiceService(URL wsdlLocation) {
    super(wsdlLocation, CUSTOMERSERVICESERVICE_QNAME);
  }

  public CustomerServiceService(URL wsdlLocation, WebServiceFeature... features) {
    super(wsdlLocation, CUSTOMERSERVICESERVICE_QNAME, features);
  }

  public CustomerServiceService(URL wsdlLocation, QName serviceName) {
    super(wsdlLocation, serviceName);
  }

  public CustomerServiceService(
      URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
    super(wsdlLocation, serviceName, features);
  }

  /**
   * @return returns CustomerService
   */
  @WebEndpoint(name = "CustomerServicePort")
  public CustomerService getCustomerServicePort() {
    return super.getPort(
        new QName("http://customerservice.example.com/", "CustomerServicePort"),
        CustomerService.class);
  }

  /**
   * @param features A list of {@link WebServiceFeature} to configure on the proxy. Supported
   *     features not in the <code>features</code> parameter will have their default values.
   * @return returns CustomerService
   */
  @WebEndpoint(name = "CustomerServicePort")
  public CustomerService getCustomerServicePort(WebServiceFeature... features) {
    return super.getPort(
        new QName("http://customerservice.example.com/", "CustomerServicePort"),
        CustomerService.class,
        features);
  }

  private static URL __getWsdlLocation() {
    if (CUSTOMERSERVICESERVICE_EXCEPTION != null) {
      throw CUSTOMERSERVICESERVICE_EXCEPTION;
    }
    return CUSTOMERSERVICESERVICE_WSDL_LOCATION;
  }
}
